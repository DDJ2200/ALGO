#row-sum column-sum of elements of 2d array using loop
num_rows = int(input("Enter the number of rows: "))
num_cols = int(input("Enter the number of columns: "))
array_2d = []
for i in range(num_rows):
    row = list(map(int, input(f"Enter row {i+1} as a list of numbers separated by spaces: ").split()))
    if len(row) != num_cols:
        raise ValueError("Invalid number of columns")
    array_2d.append(row)

# Print the 2D array
print("\n2D array:")
for row in array_2d:
    print(row)

# Calculate the row sums
row_sums = [sum(row) for row in array_2d]
print("\nRow sums:", row_sums)

# Calculate the column sums
col_sums = [0] * num_cols
for col in range(num_cols):
    for row in range(num_rows):
        col_sums[col] += array_2d[row][col]
print("Column sums:", col_sums)



#row-sum column-sum of elements of 2d array using the numpy library
import numpy as np

# Create a 2D array
arr = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])

# Print the 2D array
print("2D Array:")
print(arr)

# Calculate row-sum
row_sum = np.sum(arr, axis=1)
print("\nRow Sum:")
print(row_sum)

# Calculate column-sum
col_sum = np.sum(arr, axis=0)
print("\nColumn Sum:")
print(col_sum)

#adding of 2 matrix using nested loops

matrix1 = [[1, 3, 3], [4, 6, 6], [8, 8, 9]]
matrix2 = [[9, 8, 7], [6, 5, 4], [3, 1, 1]]
result_matrix = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]


for row in range(len(matrix1)):
    for column in range(len(matrix1[0])):
        result_matrix[row][column] = matrix1[row][column] + matrix2[row][column]


for row in result_matrix:
    print("Result:")
    print(row)
    
#multpilication of 2 matrix using nested loops
matrix1 = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
matrix2 = [[9, 8, 7], [6, 5, 4], [3, 2, 1]]
result_matrix = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]

for row in range(len(matrix1)):
    for column in range(len(matrix2[0])):
        for k in range(len(matrix2)):
            result_matrix[row][column] += matrix1[row][k] * matrix2[k][column]
for row in result_matrix:
    print(row)
